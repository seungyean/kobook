<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 맵퍼 의 네임스페이스는 mapper 패키지와 클래스이름으로 해야 한다 -->
<mapper namespace="kobook.mypage.mapper.MypageMapper">
  <cache />

<!-- 판매내역 리스트 -->
<select id="sellList" resultType="Book" parameterType="int">
	select *
	from book
	where person_id = #{person_id}
</select>

<!-- 판매상태 업데이트 -->
<update id="sellStateUpdate" parameterType="book">
	update book
	   set book_sell_state = #{book_sell_state}
	 where book_id = #{book_id}
</update>

<!-- 구매내역 리스트 -->
<select id="buyList" resultType="hashMap" parameterType="int">
	select person.person_id, b.book_img, b.book_name,b.book_m_price,
	pay.pay_id, pay.pay_date, b.person_id
	from person person, book b, pay pay, pick pick
	where person.person_id = pick.person_id
	and pick.book_id = b.book_id
	and pick.pick_id = pay.pick_id
	and person.person_id = #{person_id}
</select>

<!-- 마일리지 리스트 -->
<select id="mileageList" resultType="hashMap">
 select m.mileage_date,m.mileage_kind,m.mileage_point, p.person_id,m.MILEAGE_ID
 from person p, MILEAGE m
 where p.person_id = m.person_id
 and p.person_id = #{person_id}
</select>

<!-- 찜리 -->
<select id="pickList" resultType="hashMap" parameterType="int" >
	 SELECT b.book_img, b.book_name, p2.person_name,b.BOOK_M_PRICE,b.BOOK_SELL_STATE, p.pick_state,p.pick_id
	from pick p, book b, person p2
	WHERE p.book_id = b.book_id
	and b.person_id = p2.person_id
	and p.pick_state = 'Y'
	and p.person_id = #{person_id}
</select>

<select id="sumMileage" resultType="int" parameterType="int">
	select person_mileage 
	from person 
	where person_id = #{person_id}
</select>

<!-- 찜리삭제 -->
<update id="pickUpdate" parameterType="int">
	update pick
	set pick_state = 'N'
	where pick_id = #{pick_id}
</update>

<!-- 결제 등록 -->
<insert id="insertPay" parameterType="paySuccess">
INSERT INTO pay VALUES(#{pay_id},#{pay_amount},TO_DATE(SYSDATE,'YYYY-MM-DD'),#{pick_id})
</insert>

<!-- 결제번호 증가 -->
<select id="selectPay_id" resultType="Integer">
	select max(pay_id) from pay
</select>

<!-- 마일리지 등록 -->
<insert id="insertMileage" parameterType="Mileage">
INSERT INTO mileage VALUES(#{mileage_id},#{mileage_kind},TO_DATE(SYSDATE,'YYYY-MM-DD'),#{mileage_point},#{pay_id},#{person_id})
</insert>

<!-- 마일리지번호 증가 -->
<select id="selectM_id" resultType="Integer">
	select max(mileage_id) from mileage
</select>

<!-- 마일리지 업데이트(적립) -->
<update id="mileagePointUpdate" parameterType="hashMap">
UPDATE person SET person_mileage = person_mileage + #{mileage_point} WHERE person_id = #{person_id}
</update>

<!-- 마일리지 업데이트(차감) -->


</mapper>















